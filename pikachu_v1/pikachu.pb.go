// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: pikachu_v1/pikachu.proto

package pikachu_v1

import (
	core_v1 "github.com/kutty-kumar/ho_oh_go/core_v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName   string                 `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string                 `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	DateOfBirth *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Age         int64                  `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Height      float64                `protobuf:"fixed64,5,opt,name=height,proto3" json:"height,omitempty"`
	Weight      float64                `protobuf:"fixed64,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Gender      core_v1.Gender         `protobuf:"varint,7,opt,name=gender,proto3,enum=core_v1.Gender" json:"gender,omitempty"`
	Status      core_v1.Status         `protobuf:"varint,8,opt,name=status,proto3,enum=core_v1.Status" json:"status,omitempty"`
	ExternalId  string                 `protobuf:"bytes,9,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *UserDto) Reset() {
	*x = UserDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDto) ProtoMessage() {}

func (x *UserDto) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDto.ProtoReflect.Descriptor instead.
func (*UserDto) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{0}
}

func (x *UserDto) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserDto) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserDto) GetDateOfBirth() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

func (x *UserDto) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UserDto) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UserDto) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UserDto) GetGender() core_v1.Gender {
	if x != nil {
		return x.Gender
	}
	return core_v1.Gender_unknown_gender
}

func (x *UserDto) GetStatus() core_v1.Status {
	if x != nil {
		return x.Status
	}
	return core_v1.Status_unknown_status
}

func (x *UserDto) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type AddressDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line1   string `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2   string `protobuf:"bytes,2,opt,name=line2,proto3" json:"line2,omitempty"`
	ZipCode string `protobuf:"bytes,3,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	State   string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Country string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *AddressDto) Reset() {
	*x = AddressDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDto) ProtoMessage() {}

func (x *AddressDto) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDto.ProtoReflect.Descriptor instead.
func (*AddressDto) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{1}
}

func (x *AddressDto) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *AddressDto) GetLine2() string {
	if x != nil {
		return x.Line2
	}
	return ""
}

func (x *AddressDto) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *AddressDto) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AddressDto) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type IdentityDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityType  core_v1.IdentityType `protobuf:"varint,1,opt,name=identity_type,json=identityType,proto3,enum=core_v1.IdentityType" json:"identity_type,omitempty"`
	IdentityValue string               `protobuf:"bytes,2,opt,name=identity_value,json=identityValue,proto3" json:"identity_value,omitempty"`
	Status        core_v1.Status       `protobuf:"varint,3,opt,name=status,proto3,enum=core_v1.Status" json:"status,omitempty"`
	ExternalId    string               `protobuf:"bytes,4,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *IdentityDto) Reset() {
	*x = IdentityDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityDto) ProtoMessage() {}

func (x *IdentityDto) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityDto.ProtoReflect.Descriptor instead.
func (*IdentityDto) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{2}
}

func (x *IdentityDto) GetIdentityType() core_v1.IdentityType {
	if x != nil {
		return x.IdentityType
	}
	return core_v1.IdentityType_unknown_identity_type
}

func (x *IdentityDto) GetIdentityValue() string {
	if x != nil {
		return x.IdentityValue
	}
	return ""
}

func (x *IdentityDto) GetStatus() core_v1.Status {
	if x != nil {
		return x.Status
	}
	return core_v1.Status_unknown_status
}

func (x *IdentityDto) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type UserAttributeDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeKey   string         `protobuf:"bytes,1,opt,name=attribute_key,json=attributeKey,proto3" json:"attribute_key,omitempty"`
	AttributeValue string         `protobuf:"bytes,2,opt,name=attribute_value,json=attributeValue,proto3" json:"attribute_value,omitempty"`
	Status         core_v1.Status `protobuf:"varint,3,opt,name=status,proto3,enum=core_v1.Status" json:"status,omitempty"`
	ExternalId     string         `protobuf:"bytes,4,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *UserAttributeDto) Reset() {
	*x = UserAttributeDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttributeDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttributeDto) ProtoMessage() {}

func (x *UserAttributeDto) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttributeDto.ProtoReflect.Descriptor instead.
func (*UserAttributeDto) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{3}
}

func (x *UserAttributeDto) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

func (x *UserAttributeDto) GetAttributeValue() string {
	if x != nil {
		return x.AttributeValue
	}
	return ""
}

func (x *UserAttributeDto) GetStatus() core_v1.Status {
	if x != nil {
		return x.Status
	}
	return core_v1.Status_unknown_status
}

func (x *UserAttributeDto) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type RelationDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   core_v1.Status   `protobuf:"varint,1,opt,name=status,proto3,enum=core_v1.Status" json:"status,omitempty"`
	Relation core_v1.Relation `protobuf:"varint,3,opt,name=relation,proto3,enum=core_v1.Relation" json:"relation,omitempty"`
	UserId   string           `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RelationDto) Reset() {
	*x = RelationDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationDto) ProtoMessage() {}

func (x *RelationDto) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationDto.ProtoReflect.Descriptor instead.
func (*RelationDto) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{4}
}

func (x *RelationDto) GetStatus() core_v1.Status {
	if x != nil {
		return x.Status
	}
	return core_v1.Status_unknown_status
}

func (x *RelationDto) GetRelation() core_v1.Relation {
	if x != nil {
		return x.Relation
	}
	return core_v1.Relation_unknown_relation
}

func (x *RelationDto) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserRelationDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         *UserDto     `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserRelation *RelationDto `protobuf:"bytes,2,opt,name=user_relation,json=userRelation,proto3" json:"user_relation,omitempty"`
}

func (x *UserRelationDto) Reset() {
	*x = UserRelationDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRelationDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRelationDto) ProtoMessage() {}

func (x *UserRelationDto) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRelationDto.ProtoReflect.Descriptor instead.
func (*UserRelationDto) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{5}
}

func (x *UserRelationDto) GetUser() *UserDto {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserRelationDto) GetUserRelation() *RelationDto {
	if x != nil {
		return x.UserRelation
	}
	return nil
}

type LinkRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserRelation *UserRelationDto `protobuf:"bytes,2,opt,name=user_relation,json=userRelation,proto3" json:"user_relation,omitempty"`
}

func (x *LinkRelationRequest) Reset() {
	*x = LinkRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRelationRequest) ProtoMessage() {}

func (x *LinkRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRelationRequest.ProtoReflect.Descriptor instead.
func (*LinkRelationRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{6}
}

func (x *LinkRelationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LinkRelationRequest) GetUserRelation() *UserRelationDto {
	if x != nil {
		return x.UserRelation
	}
	return nil
}

type LinkRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patient *RelationDto `protobuf:"bytes,1,opt,name=patient,proto3" json:"patient,omitempty"`
}

func (x *LinkRelationResponse) Reset() {
	*x = LinkRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRelationResponse) ProtoMessage() {}

func (x *LinkRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRelationResponse.ProtoReflect.Descriptor instead.
func (*LinkRelationResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{7}
}

func (x *LinkRelationResponse) GetPatient() *RelationDto {
	if x != nil {
		return x.Patient
	}
	return nil
}

type UnlinkRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RelationId string `protobuf:"bytes,2,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`
}

func (x *UnlinkRelationRequest) Reset() {
	*x = UnlinkRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkRelationRequest) ProtoMessage() {}

func (x *UnlinkRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkRelationRequest.ProtoReflect.Descriptor instead.
func (*UnlinkRelationRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{8}
}

func (x *UnlinkRelationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UnlinkRelationRequest) GetRelationId() string {
	if x != nil {
		return x.RelationId
	}
	return ""
}

type UnlinkRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlinkRelationResponse) Reset() {
	*x = UnlinkRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkRelationResponse) ProtoMessage() {}

func (x *UnlinkRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkRelationResponse.ProtoReflect.Descriptor instead.
func (*UnlinkRelationResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{9}
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserDto `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{10}
}

func (x *CreateUserRequest) GetPayload() *UserDto {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UserOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *UserDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *UserOperationResponse) Reset() {
	*x = UserOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOperationResponse) ProtoMessage() {}

func (x *UserOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOperationResponse.ProtoReflect.Descriptor instead.
func (*UserOperationResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{11}
}

func (x *UserOperationResponse) GetResponse() *UserDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetUserByExternalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserByExternalIdRequest) Reset() {
	*x = GetUserByExternalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByExternalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByExternalIdRequest) ProtoMessage() {}

func (x *GetUserByExternalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByExternalIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserByExternalIdRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserByExternalIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserByInternalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserByInternalIdRequest) Reset() {
	*x = GetUserByInternalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByInternalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByInternalIdRequest) ProtoMessage() {}

func (x *GetUserByInternalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByInternalIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserByInternalIdRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserByInternalIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *UserDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetUserByIdResponse) Reset() {
	*x = GetUserByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIdResponse) ProtoMessage() {}

func (x *GetUserByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIdResponse.ProtoReflect.Descriptor instead.
func (*GetUserByIdResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserByIdResponse) GetResponse() *UserDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserDto `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	UserId  string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateUserRequest) GetPayload() *UserDto {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UpdateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *UserDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserResponse) GetResponse() *UserDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type MultiGetUsersByExternalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *MultiGetUsersByExternalIdRequest) Reset() {
	*x = MultiGetUsersByExternalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiGetUsersByExternalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiGetUsersByExternalIdRequest) ProtoMessage() {}

func (x *MultiGetUsersByExternalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiGetUsersByExternalIdRequest.ProtoReflect.Descriptor instead.
func (*MultiGetUsersByExternalIdRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{17}
}

func (x *MultiGetUsersByExternalIdRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type MultiGetUsersByInternalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *MultiGetUsersByInternalIdRequest) Reset() {
	*x = MultiGetUsersByInternalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiGetUsersByInternalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiGetUsersByInternalIdRequest) ProtoMessage() {}

func (x *MultiGetUsersByInternalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiGetUsersByInternalIdRequest.ProtoReflect.Descriptor instead.
func (*MultiGetUsersByInternalIdRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{18}
}

func (x *MultiGetUsersByInternalIdRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type MultiGetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*UserDto `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *MultiGetUsersResponse) Reset() {
	*x = MultiGetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiGetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiGetUsersResponse) ProtoMessage() {}

func (x *MultiGetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiGetUsersResponse.ProtoReflect.Descriptor instead.
func (*MultiGetUsersResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{19}
}

func (x *MultiGetUsersResponse) GetResponse() []*UserDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateUserIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Payload *IdentityDto `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateUserIdentityRequest) Reset() {
	*x = CreateUserIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserIdentityRequest) ProtoMessage() {}

func (x *CreateUserIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserIdentityRequest.ProtoReflect.Descriptor instead.
func (*CreateUserIdentityRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{20}
}

func (x *CreateUserIdentityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserIdentityRequest) GetPayload() *IdentityDto {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CreateUserIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *IdentityDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CreateUserIdentityResponse) Reset() {
	*x = CreateUserIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserIdentityResponse) ProtoMessage() {}

func (x *CreateUserIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserIdentityResponse.ProtoReflect.Descriptor instead.
func (*CreateUserIdentityResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{21}
}

func (x *CreateUserIdentityResponse) GetResponse() *IdentityDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateUserIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserIdentityId string       `protobuf:"bytes,2,opt,name=user_identity_id,json=userIdentityId,proto3" json:"user_identity_id,omitempty"`
	Payload        *IdentityDto `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpdateUserIdentityRequest) Reset() {
	*x = UpdateUserIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserIdentityRequest) ProtoMessage() {}

func (x *UpdateUserIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserIdentityRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserIdentityRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateUserIdentityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserIdentityRequest) GetUserIdentityId() string {
	if x != nil {
		return x.UserIdentityId
	}
	return ""
}

func (x *UpdateUserIdentityRequest) GetPayload() *IdentityDto {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UpdateUserIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *IdentityDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *UpdateUserIdentityResponse) Reset() {
	*x = UpdateUserIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserIdentityResponse) ProtoMessage() {}

func (x *UpdateUserIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserIdentityResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserIdentityResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateUserIdentityResponse) GetResponse() *IdentityDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetUserIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserIdentityId string `protobuf:"bytes,2,opt,name=user_identity_id,json=userIdentityId,proto3" json:"user_identity_id,omitempty"`
}

func (x *GetUserIdentityRequest) Reset() {
	*x = GetUserIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIdentityRequest) ProtoMessage() {}

func (x *GetUserIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIdentityRequest.ProtoReflect.Descriptor instead.
func (*GetUserIdentityRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserIdentityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserIdentityRequest) GetUserIdentityId() string {
	if x != nil {
		return x.UserIdentityId
	}
	return ""
}

type GetUserIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *IdentityDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetUserIdentityResponse) Reset() {
	*x = GetUserIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIdentityResponse) ProtoMessage() {}

func (x *GetUserIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIdentityResponse.ProtoReflect.Descriptor instead.
func (*GetUserIdentityResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserIdentityResponse) GetResponse() *IdentityDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type MultiGetUserIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MultiGetUserIdentityRequest) Reset() {
	*x = MultiGetUserIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiGetUserIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiGetUserIdentityRequest) ProtoMessage() {}

func (x *MultiGetUserIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiGetUserIdentityRequest.ProtoReflect.Descriptor instead.
func (*MultiGetUserIdentityRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{26}
}

func (x *MultiGetUserIdentityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MultiGetUserIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*IdentityDto `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *MultiGetUserIdentityResponse) Reset() {
	*x = MultiGetUserIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiGetUserIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiGetUserIdentityResponse) ProtoMessage() {}

func (x *MultiGetUserIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiGetUserIdentityResponse.ProtoReflect.Descriptor instead.
func (*MultiGetUserIdentityResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{27}
}

func (x *MultiGetUserIdentityResponse) GetResponse() []*IdentityDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetUserIdentitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserIdentitiesRequest) Reset() {
	*x = GetUserIdentitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIdentitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIdentitiesRequest) ProtoMessage() {}

func (x *GetUserIdentitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIdentitiesRequest.ProtoReflect.Descriptor instead.
func (*GetUserIdentitiesRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserIdentitiesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserIdentitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*IdentityDto `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *GetUserIdentitiesResponse) Reset() {
	*x = GetUserIdentitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIdentitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIdentitiesResponse) ProtoMessage() {}

func (x *GetUserIdentitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIdentitiesResponse.ProtoReflect.Descriptor instead.
func (*GetUserIdentitiesResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserIdentitiesResponse) GetResponse() []*IdentityDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateUserAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Payload *AddressDto `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateUserAddressRequest) Reset() {
	*x = CreateUserAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserAddressRequest) ProtoMessage() {}

func (x *CreateUserAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserAddressRequest.ProtoReflect.Descriptor instead.
func (*CreateUserAddressRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{30}
}

func (x *CreateUserAddressRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserAddressRequest) GetPayload() *AddressDto {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CreateUserAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *AddressDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CreateUserAddressResponse) Reset() {
	*x = CreateUserAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserAddressResponse) ProtoMessage() {}

func (x *CreateUserAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserAddressResponse.ProtoReflect.Descriptor instead.
func (*CreateUserAddressResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{31}
}

func (x *CreateUserAddressResponse) GetResponse() *AddressDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetUserAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserAddressesRequest) Reset() {
	*x = GetUserAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressesRequest) ProtoMessage() {}

func (x *GetUserAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetUserAddressesRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{32}
}

func (x *GetUserAddressesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []*AddressDto `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *GetUserAddressesResponse) Reset() {
	*x = GetUserAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressesResponse) ProtoMessage() {}

func (x *GetUserAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetUserAddressesResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{33}
}

func (x *GetUserAddressesResponse) GetAddresses() []*AddressDto {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type UpdateUserAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AddressId string      `protobuf:"bytes,2,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	Payload   *AddressDto `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpdateUserAddressRequest) Reset() {
	*x = UpdateUserAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAddressRequest) ProtoMessage() {}

func (x *UpdateUserAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserAddressRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateUserAddressRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserAddressRequest) GetAddressId() string {
	if x != nil {
		return x.AddressId
	}
	return ""
}

func (x *UpdateUserAddressRequest) GetPayload() *AddressDto {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UpdateUserAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *AddressDto `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UpdateUserAddressResponse) Reset() {
	*x = UpdateUserAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAddressResponse) ProtoMessage() {}

func (x *UpdateUserAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAddressResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserAddressResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateUserAddressResponse) GetAddress() *AddressDto {
	if x != nil {
		return x.Address
	}
	return nil
}

type CreateUserRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Payload *RelationDto `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateUserRelationRequest) Reset() {
	*x = CreateUserRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRelationRequest) ProtoMessage() {}

func (x *CreateUserRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRelationRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRelationRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{36}
}

func (x *CreateUserRelationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserRelationRequest) GetPayload() *RelationDto {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CreateUserRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relation *RelationDto `protobuf:"bytes,1,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *CreateUserRelationResponse) Reset() {
	*x = CreateUserRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRelationResponse) ProtoMessage() {}

func (x *CreateUserRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRelationResponse.ProtoReflect.Descriptor instead.
func (*CreateUserRelationResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{37}
}

func (x *CreateUserRelationResponse) GetRelation() *RelationDto {
	if x != nil {
		return x.Relation
	}
	return nil
}

type GetUserRelationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserRelationsRequest) Reset() {
	*x = GetUserRelationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationsRequest) ProtoMessage() {}

func (x *GetUserRelationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationsRequest.ProtoReflect.Descriptor instead.
func (*GetUserRelationsRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{38}
}

func (x *GetUserRelationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserRelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relations []*RelationDto `protobuf:"bytes,1,rep,name=relations,proto3" json:"relations,omitempty"`
}

func (x *GetUserRelationsResponse) Reset() {
	*x = GetUserRelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationsResponse) ProtoMessage() {}

func (x *GetUserRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationsResponse.ProtoReflect.Descriptor instead.
func (*GetUserRelationsResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{39}
}

func (x *GetUserRelationsResponse) GetRelations() []*RelationDto {
	if x != nil {
		return x.Relations
	}
	return nil
}

type DeleteUserRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RelationId string `protobuf:"bytes,2,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`
}

func (x *DeleteUserRelationRequest) Reset() {
	*x = DeleteUserRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRelationRequest) ProtoMessage() {}

func (x *DeleteUserRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRelationRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRelationRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteUserRelationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteUserRelationRequest) GetRelationId() string {
	if x != nil {
		return x.RelationId
	}
	return ""
}

type DeleteUserRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relation *RelationDto `protobuf:"bytes,1,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *DeleteUserRelationResponse) Reset() {
	*x = DeleteUserRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRelationResponse) ProtoMessage() {}

func (x *DeleteUserRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRelationResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserRelationResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteUserRelationResponse) GetRelation() *RelationDto {
	if x != nil {
		return x.Relation
	}
	return nil
}

type CreateUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserAttribute *UserAttributeDto `protobuf:"bytes,2,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *CreateUserAttributeRequest) Reset() {
	*x = CreateUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserAttributeRequest) ProtoMessage() {}

func (x *CreateUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*CreateUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{42}
}

func (x *CreateUserAttributeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserAttributeRequest) GetUserAttribute() *UserAttributeDto {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

type CreateUserAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAttribute *UserAttributeDto `protobuf:"bytes,1,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *CreateUserAttributeResponse) Reset() {
	*x = CreateUserAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserAttributeResponse) ProtoMessage() {}

func (x *CreateUserAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserAttributeResponse.ProtoReflect.Descriptor instead.
func (*CreateUserAttributeResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{43}
}

func (x *CreateUserAttributeResponse) GetUserAttribute() *UserAttributeDto {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

type UpdateUserAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AttributeKey  string            `protobuf:"bytes,2,opt,name=attribute_key,json=attributeKey,proto3" json:"attribute_key,omitempty"`
	UserAttribute *UserAttributeDto `protobuf:"bytes,3,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *UpdateUserAttributeRequest) Reset() {
	*x = UpdateUserAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAttributeRequest) ProtoMessage() {}

func (x *UpdateUserAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserAttributeRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateUserAttributeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserAttributeRequest) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

func (x *UpdateUserAttributeRequest) GetUserAttribute() *UserAttributeDto {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

type UpdateUserAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAttribute *UserAttributeDto `protobuf:"bytes,1,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *UpdateUserAttributeResponse) Reset() {
	*x = UpdateUserAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAttributeResponse) ProtoMessage() {}

func (x *UpdateUserAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAttributeResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserAttributeResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateUserAttributeResponse) GetUserAttribute() *UserAttributeDto {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

type GetUserAttributeByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AttributeKey string `protobuf:"bytes,2,opt,name=attribute_key,json=attributeKey,proto3" json:"attribute_key,omitempty"`
}

func (x *GetUserAttributeByKeyRequest) Reset() {
	*x = GetUserAttributeByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAttributeByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAttributeByKeyRequest) ProtoMessage() {}

func (x *GetUserAttributeByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAttributeByKeyRequest.ProtoReflect.Descriptor instead.
func (*GetUserAttributeByKeyRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{46}
}

func (x *GetUserAttributeByKeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserAttributeByKeyRequest) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

type GetUserAttributeByKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAttribute *UserAttributeDto `protobuf:"bytes,1,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
}

func (x *GetUserAttributeByKeyResponse) Reset() {
	*x = GetUserAttributeByKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAttributeByKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAttributeByKeyResponse) ProtoMessage() {}

func (x *GetUserAttributeByKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAttributeByKeyResponse.ProtoReflect.Descriptor instead.
func (*GetUserAttributeByKeyResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{47}
}

func (x *GetUserAttributeByKeyResponse) GetUserAttribute() *UserAttributeDto {
	if x != nil {
		return x.UserAttribute
	}
	return nil
}

type GetUserAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserAttributesRequest) Reset() {
	*x = GetUserAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAttributesRequest) ProtoMessage() {}

func (x *GetUserAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAttributesRequest.ProtoReflect.Descriptor instead.
func (*GetUserAttributesRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{48}
}

func (x *GetUserAttributesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAttributes []*UserAttributeDto `protobuf:"bytes,1,rep,name=user_attributes,json=userAttributes,proto3" json:"user_attributes,omitempty"`
}

func (x *GetUserAttributesResponse) Reset() {
	*x = GetUserAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAttributesResponse) ProtoMessage() {}

func (x *GetUserAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAttributesResponse.ProtoReflect.Descriptor instead.
func (*GetUserAttributesResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{49}
}

func (x *GetUserAttributesResponse) GetUserAttributes() []*UserAttributeDto {
	if x != nil {
		return x.UserAttributes
	}
	return nil
}

type GetUserByEmailAndPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GetUserByEmailAndPasswordRequest) Reset() {
	*x = GetUserByEmailAndPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByEmailAndPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByEmailAndPasswordRequest) ProtoMessage() {}

func (x *GetUserByEmailAndPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByEmailAndPasswordRequest.ProtoReflect.Descriptor instead.
func (*GetUserByEmailAndPasswordRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{50}
}

func (x *GetUserByEmailAndPasswordRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserByEmailAndPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GetUserByEmailAndPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *UserDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetUserByEmailAndPasswordResponse) Reset() {
	*x = GetUserByEmailAndPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByEmailAndPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByEmailAndPasswordResponse) ProtoMessage() {}

func (x *GetUserByEmailAndPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByEmailAndPasswordResponse.ProtoReflect.Descriptor instead.
func (*GetUserByEmailAndPasswordResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{51}
}

func (x *GetUserByEmailAndPasswordResponse) GetResponse() *UserDto {
	if x != nil {
		return x.Response
	}
	return nil
}

type FindUserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailId string `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
}

func (x *FindUserByEmailRequest) Reset() {
	*x = FindUserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByEmailRequest) ProtoMessage() {}

func (x *FindUserByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByEmailRequest.ProtoReflect.Descriptor instead.
func (*FindUserByEmailRequest) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{52}
}

func (x *FindUserByEmailRequest) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

type FindUserByEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *UserDto `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *FindUserByEmailResponse) Reset() {
	*x = FindUserByEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikachu_v1_pikachu_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByEmailResponse) ProtoMessage() {}

func (x *FindUserByEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikachu_v1_pikachu_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByEmailResponse.ProtoReflect.Descriptor instead.
func (*FindUserByEmailResponse) Descriptor() ([]byte, []int) {
	return file_pikachu_v1_pikachu_proto_rawDescGZIP(), []int{53}
}

func (x *FindUserByEmailResponse) GetResponse() *UserDto {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_pikachu_v1_pikachu_proto protoreflect.FileDescriptor

var file_pikachu_v1_pikachu_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x6b,
	0x61, 0x63, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x69, 0x6b, 0x61,
	0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x02, 0x0a, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6e, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65,
	0x32, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xba, 0x01, 0x0a,
	0x0b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x74, 0x6f, 0x12, 0x3a, 0x0a, 0x0d,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d,
	0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68,
	0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b, 0x61,
	0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x74, 0x6f, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x70, 0x0a, 0x13, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x40, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68,
	0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x74, 0x6f, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x14, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69,
	0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a,
	0x15, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x18, 0x0a, 0x16, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x48,
	0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69, 0x6b, 0x61,
	0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3d, 0x0a, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x22, 0x3d, 0x0a, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x22, 0x48, 0x0a, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69,
	0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x74, 0x6f,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x51, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63,
	0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x74,
	0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x51, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b,
	0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68,
	0x75, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x74, 0x6f,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x1b, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x53, 0x0a, 0x1c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76,
	0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69,
	0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x4f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x6b, 0x61,
	0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x74,
	0x6f, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x4d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x67, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b, 0x61,
	0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x74, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x51, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69,
	0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x51, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x7a, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x62, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x74, 0x6f,
	0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22,
	0x9f, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x74, 0x6f, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x22, 0x62, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63,
	0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x5c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x22, 0x64, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x74, 0x6f, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x22, 0x54, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x54, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33,
	0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xaf, 0x14, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e,
	0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70,
	0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x3a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x74, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x69, 0x6b, 0x61,
	0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63,
	0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x32, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x7d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63,
	0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x8c, 0x01, 0x0a, 0x19, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2c,
	0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70,
	0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x1a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x2d, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x94, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75,
	0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x1e, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x70,
	0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0xa7, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63,
	0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x32,
	0x31, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f,
	0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x7d, 0x3a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x9e, 0x01, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x69,
	0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x1e, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x3a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0xae, 0x01, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70,
	0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x22, 0x2e, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x7d, 0x3a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0xa5, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63,
	0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x69,
	0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x90, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75,
	0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70,
	0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x3a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63,
	0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x9d, 0x01, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75,
	0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x35, 0x1a, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x7d, 0x3a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x8d, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x1d, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x23, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x93, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63,
	0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x69,
	0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x2a, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x78, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x2e, 0x70, 0x69, 0x6b,
	0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64,
	0x7d, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6b, 0x75, 0x74, 0x74, 0x79, 0x2d, 0x6b, 0x75, 0x6d, 0x61, 0x72, 0x2f, 0x68, 0x6f, 0x5f, 0x6f,
	0x68, 0x5f, 0x67, 0x6f, 0x2f, 0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x3b,
	0x70, 0x69, 0x6b, 0x61, 0x63, 0x68, 0x75, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pikachu_v1_pikachu_proto_rawDescOnce sync.Once
	file_pikachu_v1_pikachu_proto_rawDescData = file_pikachu_v1_pikachu_proto_rawDesc
)

func file_pikachu_v1_pikachu_proto_rawDescGZIP() []byte {
	file_pikachu_v1_pikachu_proto_rawDescOnce.Do(func() {
		file_pikachu_v1_pikachu_proto_rawDescData = protoimpl.X.CompressGZIP(file_pikachu_v1_pikachu_proto_rawDescData)
	})
	return file_pikachu_v1_pikachu_proto_rawDescData
}

var file_pikachu_v1_pikachu_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_pikachu_v1_pikachu_proto_goTypes = []interface{}{
	(*UserDto)(nil),                           // 0: pikachu_v1.UserDto
	(*AddressDto)(nil),                        // 1: pikachu_v1.AddressDto
	(*IdentityDto)(nil),                       // 2: pikachu_v1.IdentityDto
	(*UserAttributeDto)(nil),                  // 3: pikachu_v1.UserAttributeDto
	(*RelationDto)(nil),                       // 4: pikachu_v1.RelationDto
	(*UserRelationDto)(nil),                   // 5: pikachu_v1.UserRelationDto
	(*LinkRelationRequest)(nil),               // 6: pikachu_v1.LinkRelationRequest
	(*LinkRelationResponse)(nil),              // 7: pikachu_v1.LinkRelationResponse
	(*UnlinkRelationRequest)(nil),             // 8: pikachu_v1.UnlinkRelationRequest
	(*UnlinkRelationResponse)(nil),            // 9: pikachu_v1.UnlinkRelationResponse
	(*CreateUserRequest)(nil),                 // 10: pikachu_v1.CreateUserRequest
	(*UserOperationResponse)(nil),             // 11: pikachu_v1.UserOperationResponse
	(*GetUserByExternalIdRequest)(nil),        // 12: pikachu_v1.GetUserByExternalIdRequest
	(*GetUserByInternalIdRequest)(nil),        // 13: pikachu_v1.GetUserByInternalIdRequest
	(*GetUserByIdResponse)(nil),               // 14: pikachu_v1.GetUserByIdResponse
	(*UpdateUserRequest)(nil),                 // 15: pikachu_v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),                // 16: pikachu_v1.UpdateUserResponse
	(*MultiGetUsersByExternalIdRequest)(nil),  // 17: pikachu_v1.MultiGetUsersByExternalIdRequest
	(*MultiGetUsersByInternalIdRequest)(nil),  // 18: pikachu_v1.MultiGetUsersByInternalIdRequest
	(*MultiGetUsersResponse)(nil),             // 19: pikachu_v1.MultiGetUsersResponse
	(*CreateUserIdentityRequest)(nil),         // 20: pikachu_v1.CreateUserIdentityRequest
	(*CreateUserIdentityResponse)(nil),        // 21: pikachu_v1.CreateUserIdentityResponse
	(*UpdateUserIdentityRequest)(nil),         // 22: pikachu_v1.UpdateUserIdentityRequest
	(*UpdateUserIdentityResponse)(nil),        // 23: pikachu_v1.UpdateUserIdentityResponse
	(*GetUserIdentityRequest)(nil),            // 24: pikachu_v1.GetUserIdentityRequest
	(*GetUserIdentityResponse)(nil),           // 25: pikachu_v1.GetUserIdentityResponse
	(*MultiGetUserIdentityRequest)(nil),       // 26: pikachu_v1.MultiGetUserIdentityRequest
	(*MultiGetUserIdentityResponse)(nil),      // 27: pikachu_v1.MultiGetUserIdentityResponse
	(*GetUserIdentitiesRequest)(nil),          // 28: pikachu_v1.GetUserIdentitiesRequest
	(*GetUserIdentitiesResponse)(nil),         // 29: pikachu_v1.GetUserIdentitiesResponse
	(*CreateUserAddressRequest)(nil),          // 30: pikachu_v1.CreateUserAddressRequest
	(*CreateUserAddressResponse)(nil),         // 31: pikachu_v1.CreateUserAddressResponse
	(*GetUserAddressesRequest)(nil),           // 32: pikachu_v1.GetUserAddressesRequest
	(*GetUserAddressesResponse)(nil),          // 33: pikachu_v1.GetUserAddressesResponse
	(*UpdateUserAddressRequest)(nil),          // 34: pikachu_v1.UpdateUserAddressRequest
	(*UpdateUserAddressResponse)(nil),         // 35: pikachu_v1.UpdateUserAddressResponse
	(*CreateUserRelationRequest)(nil),         // 36: pikachu_v1.CreateUserRelationRequest
	(*CreateUserRelationResponse)(nil),        // 37: pikachu_v1.CreateUserRelationResponse
	(*GetUserRelationsRequest)(nil),           // 38: pikachu_v1.GetUserRelationsRequest
	(*GetUserRelationsResponse)(nil),          // 39: pikachu_v1.GetUserRelationsResponse
	(*DeleteUserRelationRequest)(nil),         // 40: pikachu_v1.DeleteUserRelationRequest
	(*DeleteUserRelationResponse)(nil),        // 41: pikachu_v1.DeleteUserRelationResponse
	(*CreateUserAttributeRequest)(nil),        // 42: pikachu_v1.CreateUserAttributeRequest
	(*CreateUserAttributeResponse)(nil),       // 43: pikachu_v1.CreateUserAttributeResponse
	(*UpdateUserAttributeRequest)(nil),        // 44: pikachu_v1.UpdateUserAttributeRequest
	(*UpdateUserAttributeResponse)(nil),       // 45: pikachu_v1.UpdateUserAttributeResponse
	(*GetUserAttributeByKeyRequest)(nil),      // 46: pikachu_v1.GetUserAttributeByKeyRequest
	(*GetUserAttributeByKeyResponse)(nil),     // 47: pikachu_v1.GetUserAttributeByKeyResponse
	(*GetUserAttributesRequest)(nil),          // 48: pikachu_v1.GetUserAttributesRequest
	(*GetUserAttributesResponse)(nil),         // 49: pikachu_v1.GetUserAttributesResponse
	(*GetUserByEmailAndPasswordRequest)(nil),  // 50: pikachu_v1.GetUserByEmailAndPasswordRequest
	(*GetUserByEmailAndPasswordResponse)(nil), // 51: pikachu_v1.GetUserByEmailAndPasswordResponse
	(*FindUserByEmailRequest)(nil),            // 52: pikachu_v1.FindUserByEmailRequest
	(*FindUserByEmailResponse)(nil),           // 53: pikachu_v1.FindUserByEmailResponse
	(*timestamppb.Timestamp)(nil),             // 54: google.protobuf.Timestamp
	(core_v1.Gender)(0),                       // 55: core_v1.Gender
	(core_v1.Status)(0),                       // 56: core_v1.Status
	(core_v1.IdentityType)(0),                 // 57: core_v1.IdentityType
	(core_v1.Relation)(0),                     // 58: core_v1.Relation
}
var file_pikachu_v1_pikachu_proto_depIdxs = []int32{
	54, // 0: pikachu_v1.UserDto.date_of_birth:type_name -> google.protobuf.Timestamp
	55, // 1: pikachu_v1.UserDto.gender:type_name -> core_v1.Gender
	56, // 2: pikachu_v1.UserDto.status:type_name -> core_v1.Status
	57, // 3: pikachu_v1.IdentityDto.identity_type:type_name -> core_v1.IdentityType
	56, // 4: pikachu_v1.IdentityDto.status:type_name -> core_v1.Status
	56, // 5: pikachu_v1.UserAttributeDto.status:type_name -> core_v1.Status
	56, // 6: pikachu_v1.RelationDto.status:type_name -> core_v1.Status
	58, // 7: pikachu_v1.RelationDto.relation:type_name -> core_v1.Relation
	0,  // 8: pikachu_v1.UserRelationDto.user:type_name -> pikachu_v1.UserDto
	4,  // 9: pikachu_v1.UserRelationDto.user_relation:type_name -> pikachu_v1.RelationDto
	5,  // 10: pikachu_v1.LinkRelationRequest.user_relation:type_name -> pikachu_v1.UserRelationDto
	4,  // 11: pikachu_v1.LinkRelationResponse.patient:type_name -> pikachu_v1.RelationDto
	0,  // 12: pikachu_v1.CreateUserRequest.payload:type_name -> pikachu_v1.UserDto
	0,  // 13: pikachu_v1.UserOperationResponse.response:type_name -> pikachu_v1.UserDto
	0,  // 14: pikachu_v1.GetUserByIdResponse.response:type_name -> pikachu_v1.UserDto
	0,  // 15: pikachu_v1.UpdateUserRequest.payload:type_name -> pikachu_v1.UserDto
	0,  // 16: pikachu_v1.UpdateUserResponse.response:type_name -> pikachu_v1.UserDto
	0,  // 17: pikachu_v1.MultiGetUsersResponse.response:type_name -> pikachu_v1.UserDto
	2,  // 18: pikachu_v1.CreateUserIdentityRequest.payload:type_name -> pikachu_v1.IdentityDto
	2,  // 19: pikachu_v1.CreateUserIdentityResponse.response:type_name -> pikachu_v1.IdentityDto
	2,  // 20: pikachu_v1.UpdateUserIdentityRequest.payload:type_name -> pikachu_v1.IdentityDto
	2,  // 21: pikachu_v1.UpdateUserIdentityResponse.response:type_name -> pikachu_v1.IdentityDto
	2,  // 22: pikachu_v1.GetUserIdentityResponse.response:type_name -> pikachu_v1.IdentityDto
	2,  // 23: pikachu_v1.MultiGetUserIdentityResponse.response:type_name -> pikachu_v1.IdentityDto
	2,  // 24: pikachu_v1.GetUserIdentitiesResponse.response:type_name -> pikachu_v1.IdentityDto
	1,  // 25: pikachu_v1.CreateUserAddressRequest.payload:type_name -> pikachu_v1.AddressDto
	1,  // 26: pikachu_v1.CreateUserAddressResponse.response:type_name -> pikachu_v1.AddressDto
	1,  // 27: pikachu_v1.GetUserAddressesResponse.addresses:type_name -> pikachu_v1.AddressDto
	1,  // 28: pikachu_v1.UpdateUserAddressRequest.payload:type_name -> pikachu_v1.AddressDto
	1,  // 29: pikachu_v1.UpdateUserAddressResponse.address:type_name -> pikachu_v1.AddressDto
	4,  // 30: pikachu_v1.CreateUserRelationRequest.payload:type_name -> pikachu_v1.RelationDto
	4,  // 31: pikachu_v1.CreateUserRelationResponse.relation:type_name -> pikachu_v1.RelationDto
	4,  // 32: pikachu_v1.GetUserRelationsResponse.relations:type_name -> pikachu_v1.RelationDto
	4,  // 33: pikachu_v1.DeleteUserRelationResponse.relation:type_name -> pikachu_v1.RelationDto
	3,  // 34: pikachu_v1.CreateUserAttributeRequest.user_attribute:type_name -> pikachu_v1.UserAttributeDto
	3,  // 35: pikachu_v1.CreateUserAttributeResponse.user_attribute:type_name -> pikachu_v1.UserAttributeDto
	3,  // 36: pikachu_v1.UpdateUserAttributeRequest.user_attribute:type_name -> pikachu_v1.UserAttributeDto
	3,  // 37: pikachu_v1.UpdateUserAttributeResponse.user_attribute:type_name -> pikachu_v1.UserAttributeDto
	3,  // 38: pikachu_v1.GetUserAttributeByKeyResponse.user_attribute:type_name -> pikachu_v1.UserAttributeDto
	3,  // 39: pikachu_v1.GetUserAttributesResponse.user_attributes:type_name -> pikachu_v1.UserAttributeDto
	0,  // 40: pikachu_v1.GetUserByEmailAndPasswordResponse.response:type_name -> pikachu_v1.UserDto
	0,  // 41: pikachu_v1.FindUserByEmailResponse.response:type_name -> pikachu_v1.UserDto
	10, // 42: pikachu_v1.UserService.CreateUser:input_type -> pikachu_v1.CreateUserRequest
	15, // 43: pikachu_v1.UserService.UpdateUser:input_type -> pikachu_v1.UpdateUserRequest
	12, // 44: pikachu_v1.UserService.GetUserByExternalId:input_type -> pikachu_v1.GetUserByExternalIdRequest
	17, // 45: pikachu_v1.UserService.MultiGetUsersByExternalId:input_type -> pikachu_v1.MultiGetUsersByExternalIdRequest
	20, // 46: pikachu_v1.UserService.CreateUserIdentity:input_type -> pikachu_v1.CreateUserIdentityRequest
	28, // 47: pikachu_v1.UserService.GetUserIdentities:input_type -> pikachu_v1.GetUserIdentitiesRequest
	22, // 48: pikachu_v1.UserService.UpdateUserIdentity:input_type -> pikachu_v1.UpdateUserIdentityRequest
	42, // 49: pikachu_v1.UserService.CreateUserAttribute:input_type -> pikachu_v1.CreateUserAttributeRequest
	44, // 50: pikachu_v1.UserService.UpdateUserAttribute:input_type -> pikachu_v1.UpdateUserAttributeRequest
	46, // 51: pikachu_v1.UserService.GetUserAttributesByKey:input_type -> pikachu_v1.GetUserAttributeByKeyRequest
	48, // 52: pikachu_v1.UserService.GetUserAttributes:input_type -> pikachu_v1.GetUserAttributesRequest
	30, // 53: pikachu_v1.UserService.CreateUserAddress:input_type -> pikachu_v1.CreateUserAddressRequest
	32, // 54: pikachu_v1.UserService.GetUserAddresses:input_type -> pikachu_v1.GetUserAddressesRequest
	34, // 55: pikachu_v1.UserService.UpdateUserAddress:input_type -> pikachu_v1.UpdateUserAddressRequest
	6,  // 56: pikachu_v1.UserService.CreateUserRelation:input_type -> pikachu_v1.LinkRelationRequest
	38, // 57: pikachu_v1.UserService.GetUserRelations:input_type -> pikachu_v1.GetUserRelationsRequest
	8,  // 58: pikachu_v1.UserService.DeleteUserRelation:input_type -> pikachu_v1.UnlinkRelationRequest
	52, // 59: pikachu_v1.UserService.FindUserByEmail:input_type -> pikachu_v1.FindUserByEmailRequest
	11, // 60: pikachu_v1.UserService.CreateUser:output_type -> pikachu_v1.UserOperationResponse
	11, // 61: pikachu_v1.UserService.UpdateUser:output_type -> pikachu_v1.UserOperationResponse
	11, // 62: pikachu_v1.UserService.GetUserByExternalId:output_type -> pikachu_v1.UserOperationResponse
	19, // 63: pikachu_v1.UserService.MultiGetUsersByExternalId:output_type -> pikachu_v1.MultiGetUsersResponse
	21, // 64: pikachu_v1.UserService.CreateUserIdentity:output_type -> pikachu_v1.CreateUserIdentityResponse
	29, // 65: pikachu_v1.UserService.GetUserIdentities:output_type -> pikachu_v1.GetUserIdentitiesResponse
	23, // 66: pikachu_v1.UserService.UpdateUserIdentity:output_type -> pikachu_v1.UpdateUserIdentityResponse
	43, // 67: pikachu_v1.UserService.CreateUserAttribute:output_type -> pikachu_v1.CreateUserAttributeResponse
	45, // 68: pikachu_v1.UserService.UpdateUserAttribute:output_type -> pikachu_v1.UpdateUserAttributeResponse
	47, // 69: pikachu_v1.UserService.GetUserAttributesByKey:output_type -> pikachu_v1.GetUserAttributeByKeyResponse
	49, // 70: pikachu_v1.UserService.GetUserAttributes:output_type -> pikachu_v1.GetUserAttributesResponse
	31, // 71: pikachu_v1.UserService.CreateUserAddress:output_type -> pikachu_v1.CreateUserAddressResponse
	33, // 72: pikachu_v1.UserService.GetUserAddresses:output_type -> pikachu_v1.GetUserAddressesResponse
	35, // 73: pikachu_v1.UserService.UpdateUserAddress:output_type -> pikachu_v1.UpdateUserAddressResponse
	7,  // 74: pikachu_v1.UserService.CreateUserRelation:output_type -> pikachu_v1.LinkRelationResponse
	39, // 75: pikachu_v1.UserService.GetUserRelations:output_type -> pikachu_v1.GetUserRelationsResponse
	9,  // 76: pikachu_v1.UserService.DeleteUserRelation:output_type -> pikachu_v1.UnlinkRelationResponse
	53, // 77: pikachu_v1.UserService.FindUserByEmail:output_type -> pikachu_v1.FindUserByEmailResponse
	60, // [60:78] is the sub-list for method output_type
	42, // [42:60] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_pikachu_v1_pikachu_proto_init() }
func file_pikachu_v1_pikachu_proto_init() {
	if File_pikachu_v1_pikachu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pikachu_v1_pikachu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttributeDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRelationDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByExternalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByInternalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiGetUsersByExternalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiGetUsersByInternalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiGetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiGetUserIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiGetUserIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIdentitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIdentitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAttributeByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAttributeByKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByEmailAndPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByEmailAndPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikachu_v1_pikachu_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pikachu_v1_pikachu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pikachu_v1_pikachu_proto_goTypes,
		DependencyIndexes: file_pikachu_v1_pikachu_proto_depIdxs,
		MessageInfos:      file_pikachu_v1_pikachu_proto_msgTypes,
	}.Build()
	File_pikachu_v1_pikachu_proto = out.File
	file_pikachu_v1_pikachu_proto_rawDesc = nil
	file_pikachu_v1_pikachu_proto_goTypes = nil
	file_pikachu_v1_pikachu_proto_depIdxs = nil
}
